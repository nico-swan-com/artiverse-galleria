apiVersion: v1
kind: Service
metadata:
  namespace: $NAMESPACE
  name: $CI_PROJECT_NAME
spec:
  type: ClusterIP
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: $CI_PROJECT_NAME
  serviceAccount: true
  monitoring: true
  livenessProbe:
    httpGet:
      path: /health/liveness
      port: 9090
    initialDelaySeconds: 30
  readinessProbe:
    httpGet:
      path: /health/readiness
      port: 9090
    initialDelaySeconds: 30

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: $NAMESPACE
  name: ingress-$CI_PROJECT_NAME
annotations:
    cert-manager.io/issuer: "letsencrypt"
spec:
  rules:
  - host: $CI_PROJECT_NAME.$NAMESPACE.cygnus-labs.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: $CI_PROJECT_NAME
            port:
              number: 3000
  ingressClassName: nginx
  tls:
    - hosts:
        - $CI_PROJECT_NAME.$NAMESPACE.cygnus-labs.com
      secretName: $CI_PROJECT_NAME-$NAMESPACE-ingress-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: $NAMESPACE
  name: $CI_PROJECT_NAME
spec:
  replicas: $REPLICAS
  selector:
    matchLabels:
      app: $CI_PROJECT_NAME
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: $CI_PROJECT_NAME
    spec:
      containers:
      - name: $CI_PROJECT_NAME
        image: $IMAGE_NAME
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "200m"
            memory: "128Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"

